@model CostaDiamante_HOA.Models.Visitor

<div id="app">
    @using (Html.BeginForm()) 
    {
        @Html.AntiForgeryToken()
    
        <div class="">
            <h4>Visitor</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.name, v-model="nameVisitor", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.lastName, v-model="lastNameVisitor", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-4">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.isYounger, v-model="IsYoungerVisitor")
                        @Html.ValidationMessageFor(model => model.isYounger, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            @*
            <div class="form-group">
                <div class="col-md-10">
                    @Html.EditorFor(model => model.visitsID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.visitsID, "", new { @class = "text-danger" })
                </div>
            </div>
            *@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div class="form-group">
        <div class="col-md-4" style="padding-left: 0;">
            <label for="visitorName">Name:</label>
            <input v-model="nameVisitor" type="text" class="form-control" id="visitorName">
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-4">
            <label for="visitorLastName">Last name:</label>
            <input v-model="lastNameVisitor" type="text" class="form-control" id="visitorLastName">
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4" style="padding-right: 0">
            <label for="visitorLastName">Is smaller:</label>
            <select id="isYounger" v-model="IsYoungerVisitor" class="form-control valid">
                <option value="Yes">Yes</option>
                <option value="No">No</option>
            </select>
        </div>
    </div>

    <div class="col-md-offset-10 col-md-2" style="padding-right: 0;">
        <input type="submit" v-on:click="addVisitorToTable" v-bind:disabled="(nameVisitor === '' && lastNameVisitor === '')" value="Add" class="btn btn-default" style="float: right; margin-bottom: 10px;" />
    </div>

    <table class="table table-hover table-striped">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Is Smaller</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <tr v-for="(visitor, i) in visitors">
                <td>{{ visitor.name }}</td>
                <td>{{ visitor.lastName }}</td>
                <td>{{ visitor.isYounger }}</td>
                <td><label v-on:click="removeVisitorToTable(i)" class="removeLabel"><i class="glyphicon glyphicon-remove"></i> <span class="">Remove</span></label></td>
            </tr>
        </tbody>
    </table>

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>

@Scripts.Render("~/node_modules/vue/dist/vue.min.js")
@Scripts.Render("~/node_modules/vue/dist/vue-resource.min.js")

<script>
    const v = new Vue({
        el: '#app',
        data: {
            title: 'Create',
            nameVisitor: '',
            lastNameVisitor: '',
            IsYoungerVisitor: 'No',
            visitors: []
        },
        methods: {
            addVisitorToTable: function () {
                if (this.isYounger == 'yes') {
                    this.isYounger = true
                } else {
                    this.isYounger = false
                }

                this.visitors.push({ name: this.nameVisitor, lastName: this.lastNameVisitor, isYounger: this.IsYoungerVisitor }) // what to push unto the rows array
                this.nameVisitor = ''
                this.lastNameVisitor = ''
                this.IsYoungerVisitor = 'No'
                console.log(this.visitors)
            },
            removeVisitorToTable: function (index) {
                this.visitors.splice(index, 1)
            },
            setDataToServer: function () {
                this.$http.post('/Visits/create', { visitors: this.visitors }).then(function (response) {
                    this.visitors = response.body
                    this.visitors = []
                    console.log('post')
                });
            }
        }
    })
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
