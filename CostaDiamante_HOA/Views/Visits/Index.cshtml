@model CostaDiamante_HOA.Models.Visits.VMVisitsFilter
@using CostaDiamante_HOA.Models
@using CostaDiamante_HOA.GeneralTools

@{
    ViewBag.Title = "Visits Report";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<Visits> result = ViewBag.result;
    VMConfirmModalAttributes modalOptions = new VMConfirmModalAttributes
    {
        modalID = "cancelVisitConfirmation",
        modalTitle = "Confirm Visit Cancelation",
        primaryMessage = "You are going to confirm the cancelation of the selected visit.",
        routeVals = null,
        modalStyle = new VMConfirmModalAttributes.Style(VMConfirmModalAttributes.Style.StyleTypes.DANGER),
        callType = VMConfirmModalAttributes.CallType.JAVASCRIPT,
        javascriptFunction = "confirmVisitCancelation"
    };
}

<div id="app">
    {{ message }}
</div>


@Scripts.Render("~/node_modules/vue/dist/vue.min.js")

<script>
    const v = new Vue({
        el: '#app',
        data: {
            message: 'Hello Vue.js!'
        }
    })
</script>

<h2>Visits</h2>

@using (Html.BeginForm("Index","Visits",FormMethod.Get,null))
{
    <div class="alert alert-info">
        The filter search for arrivals in the selected range of time.
    </div>
    <div class="form-inline">
        <div class="row">
            <div class="form-group col-md-5">
                @Html.LabelFor(model => Model.TimePeriod.startDate)
                @Html.EditorFor(model => Model.TimePeriod.startDate,
           new { htmlAttributes = new { @class = "form-control", } })
            </div>

            <div class="form-group col-md-5">
                @Html.LabelFor(model => Model.TimePeriod.endDate)
                @Html.EditorFor(model => Model.TimePeriod.endDate,
           new { htmlAttributes = new { @class = "form-control", } })
            </div>

            <button id="btnSearch" name="searchVisits" class="btn btn-primary">
                <i class="fa fa-search"></i> Search
            </button>
        </div>

        @if (User.IsInRole(ApplicationUser.RoleNames.ADMIN))
        {
            <div class="row" style="margin-top:.5em">
                <div class="form-group col-md-3"
                 title="This will include the visits that are inhouse in the selected range of time.">
                    @Html.CheckBoxFor(model=>model.isInHouse)
                    @Html.LabelFor(model => model.isInHouse)
                </div>
            </div>
        }
        <div id="errorMessage" class="field-validation-error"></div>
    </div>
}

@if (result.Count() == 0)
{
    <div class="alert alert-info">
        No visits have been notified in selected period.
    </div>
}
<table class="table table-hover table-striped datatable">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => result.FirstOrDefault().visitsID)
            </th>
            <th>
                @Html.DisplayNameFor(model => result.FirstOrDefault().condoID)
            </th>
            @if (User.IsInRole(ApplicationUser.RoleNames.ADMIN)) { 
            <th>
                @Html.DisplayNameFor(model => result.FirstOrDefault().owner.fullName)
            </th>
            }
            <th>
                @Html.DisplayNameFor(model => result.FirstOrDefault().arrivalDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => result.FirstOrDefault().departureDate)
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in result)
        {
            <tr>
                <td>
                    @Html.DisplayFor(model => item.visitsID)
                </td>
                <td>
                    @Html.DisplayFor(model => item.condo.name)
                </td>
                @if (User.IsInRole(ApplicationUser.RoleNames.ADMIN))
                {
                    <td>
                        @Html.DisplayFor(model => item.owner.fullName)
                    </td>
                }
                <td>
                    @item.arrivalDate.ToLongDateString()
                </td>
                <td>
                    @item.departureDate.ToLongDateString()
                </td>
                <td>
                    <a href="@Url.Action("Details", new { id = item.visitsID })">
                        <i class="fa fa-address-book"></i> View Notification
                    </a>
                    @if (User.IsInRole(ApplicationUser.RoleNames.ADMIN))
                    {
                        @(" | ")
                        <a onclick="prepareModal(@item.visitsID)"
                           data-toggle="modal" href='#@modalOptions.modalID'>
                            <i class="glyphicon glyphicon-remove"></i> Cancel
                        </a>
                    }
                </td>
            </tr>
        }
    </tbody>

</table>
@Html.AntiForgeryToken()
@Html.Partial("../Shared/Partial_ConfirmationModal", modalOptions)
    <script>
        function prepareModal(id) {
            $('.modal-footer #btnConfirm')
                .attr('onclick','@(modalOptions.javascriptFunction)('+id+')')
        }

        function confirmVisitCancelation(id) {
            var antiForgeryToken = $('input[name=__RequestVerificationToken]').val();
            jQuery.postJSON("/Visits/DeleteConfirmed",
                { id: id},
                "JSON",
                function (result) {
                    if (result.savedRegs > 0) {
                        window.location.reload()
                    } else {
                        var error = result.error;
                    }
                },
                function (request) {
                    alert("Error: " + JSON.stringify(request));
                }, null, antiForgeryToken)
        }
    </script>

@section Scripts{
<script>
    //Date picker validation, and button block
    $("#periodReported_startDate, #periodReported_endDate").change(function () {
        var arrival = $("#periodReported_startDate").val();
        var departure = $("#periodReported_endDate").val();

        if (Date.parse(arrival) > Date.parse(departure) || arrival == "" || departure == "") {
            $("#errorMessage").html('"From date" must be less than "To Date"').fadeIn(500)
        } else {
            $("#errorMessage").fadeOut(500)
        }
        enableOrDisableBtnRegister();
    });

    function enableOrDisableBtnRegister() {
        var arrival = $("#periodReported_startDate").val();
        var departure = $("#periodReported_endDate").val();
        var enable = arrival && departure && Date.parse(arrival) <= Date.parse(departure);
        $("#btnSearch").attr('disabled', !enable);
    }
</script>
}