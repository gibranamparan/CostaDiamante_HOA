@using CostaDiamante_HOA.Models
@model Visit

@{ 
    Visit.VMVisitsFilter visitFilter = new Visit.VMVisitsFilter();
    //Visit visit = new Visit();
}

<script type="text/x-template" id="visits-list-template">
    <div id="pnlVisits">
        <div class="alert alert-info">
            The filter search for arrivals in the selected range of time.
        </div>
        <div class="form-inline">
            <div class="row">
                <div class="form-group col-md-5">
                    @Html.LabelFor(model => visitFilter.TimePeriod.startDate)
                    @Html.EditorFor(model => visitFilter.TimePeriod.startDate,
                    new { htmlAttributes = new { @class = "form-control", v_model = "startdate" } })
                </div>

                <div class="form-group col-md-5">
                    @Html.LabelFor(model => visitFilter.TimePeriod.endDate)
                    @Html.EditorFor(model => visitFilter.TimePeriod.endDate,
                    new { htmlAttributes = new { @class = "form-control", v_model = "enddate" } })
                </div>

                <button id="btnSearch" name="searchVisits" class="btn btn-primary" v-bind:disabled="validDate">
                    <i class="fa fa-search"></i> Search
                </button>
            </div>

            <div id="errorMessage" class="field-validation-error"></div>
        </div>


        <div v-if="visits.length === 0" class="alert alert-info">
            No visits have been notified in selected period.
        </div>

        <table class="table table-hover table-striped datatable">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => Model.visitID)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => Model.arrivalDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => Model.departureDate)
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="visit in visits">
                    <td>
                        {{visit.visitID}}
                    </td>
                    <td>
                        {{visit.arrivalDate}}
                    </td>
                    <td>
                        {{visit.arrivalDate}}
                    </td>
                    <td>
                        <a href="@Url.Action("Details", new { id = Model.visitID })">
                            <i class="fa fa-address-book"></i> View Notification
                        </a>
                        @if (User.IsInRole(ApplicationUser.RoleNames.ADMIN))
                        {
                            @(" | ")
                            <a href="" v-on:click="deleteVisit(visit.visitID)" data-toggle="modal">
                                <i class="glyphicon glyphicon-remove"></i> Cancel
                            </a>
                        }
                    </td>
                </tr>
            </tbody>

        </table>
    </div>
</script>

<script>
    function initListVisits(){
        const v = Vue.component('visits-list',{
            props: ['ownerid'],
            template: '#visits-list-template',
            data: function () {
                return {
                    visitFilter: {
                        startdate: '@visitFilter.TimePeriod.startDate.ToString("yyyy-MM-dd")',
                        enddate: '@visitFilter.TimePeriod.endDate.ToString("yyyy-MM-dd")',
                    },
                    visits: []
                }
            },
            methods: {
                getVisits() {
                    //Request /Owners/getVisits/:ownerID?startdate=this.filtro.startdate&endDate=this.filtro.enddate
                    axios.get('/Owners/GetVisits', {
                        params: {
                            id: this.ownerid,
                            visitFilter: this.visitFilter
                        }
                    })
                    .then(function (response) {
                        console.log(response);
                    })
                    .catch(function (error) {
                        console.log(error);
                    });
                }
            },
            created() {
                console.log('Hohoho')
            }
        })
        return v;
    }
</script>
