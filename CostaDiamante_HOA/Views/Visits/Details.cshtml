@model CostaDiamante_HOA.Models.Visit
@using CostaDiamante_HOA.Models

@{
    Payments payment = new Payments() { date = DateTime.Today.AddDays(1), amount = 0};
    ViewBag.Title = "Details";
}

<nav>
    <a href="@Url.Action("Index")">
        <i class="glyphicon glyphicon-arrow-left"></i><span>Back to List</span>
    </a> |
    <a href="@Url.Action("Edit", new { id = Model.visitID })">
        <i class="glyphicon glyphicon-edit"></i><span>Edit Visit</span>
    </a> 
</nav>
<div id="app">
    <h2>Visit Information and Payments</h2>
    <h4>
        <strong>@Model.owner.fullName</strong>, Condo <span>@Model.condo.name</span>
    </h4>
    <hr />
    <div class="panel panel-info">
        <div class="panel-heading">
            <h3 class="panel-title">Details</h3>
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.owner.fullName)
            <p class="form-control-static">@Html.DisplayFor(model => model.owner.fullName)</p>
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.date)
            <p class="form-control-static">@Html.DisplayFor(model => model.date)</p>
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.arrivalDate)
            <p class="form-control-static">@Html.DisplayFor(model => model.arrivalDate)</p>
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.departureDate)
            <p class="form-control-static">@Html.DisplayFor(model => model.departureDate)</p>
        </div>
    </div>
    <hr>
    <div>
        @*@Html.Partial("../Payments/Partial_CreatePayment", payment, new ViewDataDictionary {
            { "ownerID", Model.ownerID },
            { "visitID", Model.visitID }
        })*@
        <form v-on:submit.prevent="createNewPayment()">
            <div class="form-horizontal">
            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(model => payment.amount, htmlAttributes: new { @class = "" }) @*control-label col-md-2*@
                    @Html.EditorFor(model => payment.amount, new { htmlAttributes = new { @class = "form-control", v_model = "newPayment.amount" } })
                    @Html.ValidationMessageFor(model => payment.amount, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => payment.date)
                    @Html.EditorFor(model => payment.date, new { htmlAttributes = new { @class = "form-control", v_model = "newPayment.date" } })
                    @Html.ValidationMessageFor(model => payment.date, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-2">
                    <button id="btnRegister" name="createVisit" class="btn btn-success" type="submit">
                        Registrar
                    </button>
                </div>
            </form>
            <hr>
            @**@<div>
        <h2>List of payments</h2>
        <table id="tblPayments" class="table table-hover table-striped" v-if="payments.length > 0">
            <thead>
                <tr>
                    <th style="width: 2em"></th>
                    <th>@Html.DisplayNameFor(model => payment.amount)</th>
                    <th>@Html.DisplayNameFor(model => payment.date)</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="(payment, i) in payments">
                    <td>
                        <i class="fa fa-remove option remove" v-on:click="removePayment(payment)"></i>
                    </td>
                    <td>{{numeral(payment.amount).format('$0,000.00')}}</td>
                    <td>{{moment(payment.date).format('LL')}}</td>
                </tr>
            </tbody>
        </table>
        <div class="alert alert-info" v-if="payments.length == 0">
            <strong>No payments</strong> have been registered for this visit.
        </div>
    </div>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
@section Scripts{
<script>
    const v = new Vue({
        el: '#app',
        data: {
            paymentModel: {
                amount: 0,
                date: '@payment.date.ToString("yyyy/MM/dd")',
                typeOfPayment: 0,
                ownerID: '@Model.ownerID',
                visitID: '@Model.visitID'
            },
            newPayment: Object.assign({}, paymentModel),
            payments: []
        },
        methods: {
            getPayments: function () {
                var ws = this
                axios.post('/Payments/Index', {
                    id: '@Model.visitID'
                })
                .then(function (response) {
                    ws.payments = response.data
                    console.log(ws.payments)
                })
                .catch(function (error) {
                    console.log(error)
                })
            },
            createNewPayment: function () {
                var self = this
                axios.post('/Payments/Create', {
                    payment: self.newPayment
                })
                .then(response => {
                    self.getPayments()
                    var response = response.data
                    if (response.numReg) {
                        var newPayment
                        //Clone and insert new payment
                        Object.assign(newPayment, self.newPayment)
                        self.payments.push(newPayment)
                        //Clear new payment container
                        Object.assign(self.newPayment, self.paymentModel)
                        //Notify successfull registration
                        swal("Done!", "Your visit was scheduled succesfully", "success")
                    } else if (response.errorMsg) {
                        swal("Oops!", "An error ocurred, plase try again. If error persists, plase send this to the system administrator: " + response.errorMsg, "error")
                    } else { //Unknown error
                        console.log(response)
                    }
                })
                .catch(e => {
                    debugger
                    console.log(e)
                })
            }
        },
        created: function () {
            this.getPayments()
        }
    })
</script>
}