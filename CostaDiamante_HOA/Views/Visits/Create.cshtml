@model CostaDiamante_HOA.Models.Visits

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="app">
    <h2>{{ title }}</h2>
    <h1>{{ nameVisitor }}</h1>


    <form v-on:submit.prevent="setDataToServer()"> 
    
        @Html.AntiForgeryToken()
    
        <div class="form-horizontal">
            <h4>Visits</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.arrivalDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.arrivalDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.arrivalDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.departureDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.departureDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.departureDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.condoID, "condoID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("condoID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.condoID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ownerID, "ownerID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ownerID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ownerID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input v-click="setDataToServer" v-bind:disabled="Object.keys(visitors).length === 0" type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    </form>

    <div id="">
        <div class="form-group">
            <div class="col-md-4" style="padding-left: 0;">
                <label for="visitorName">Name:</label>
                <input v-model="nameVisitor" type="text" class="form-control" id="visitorName">
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4">
                <label for="visitorLastName">Last name:</label>
                <input v-model="lastNameVisitor" type="text" class="form-control" id="visitorLastName">
            </div>
        </div>
            
        <div class="form-group"> 
            <div class="col-md-4" style="padding-right: 0">
                <label for="visitorLastName">Is smaller:</label>
                <select id="isYounger" v-model="IsYoungerVisitor" class="form-control valid">
                    <option value="Yes">Yes</option> 
                    <option value="No">No</option> 
                </select>
            </div>
        </div>
            
        <div class="col-md-offset-10 col-md-2" style="padding-right: 0;">
            <input type="submit" v-on:click="addVisitorToTable" v-bind:disabled="(nameVisitor === '' && lastNameVisitor === '')" value="Add" class="btn btn-default" style="float: right; margin-bottom: 10px;" />
        </div>

        <table class="table table-hover table-striped">
            <thead>
                <tr>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Is Smaller</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="(visitor, i) in visitors">
                    <td>{{ visitor.name }}</td>
                    <td>{{ visitor.lastName }}</td>
                    <td>{{ visitor.isYounger }}</td>
                    <td><label v-on:click="removeVisitorToTable(i)" class="removeLabel"><i class="glyphicon glyphicon-remove"></i> <span class="">Remove</span></label></td>
                </tr>
            </tbody>
        </table>

    <div class="col-md-10">
        @Html.ActionLink("Back to List", "Index")
    </div>

</div>
</div>
@Scripts.Render("~/node_modules/vue/dist/vue.min.js")
@Scripts.Render("~/node_modules/axios/dist/axios.min.js")
<script>
    const v = new Vue({
        el: '#app',
        data: {
            title: 'Create',
            visitors: [
                visitors []
            ],
            date: '',
            arrivalDate: '',
            departureDate: '',
            condo: '',
            owner: '',
            nameVisitor: '',
            lastNameVisitor: '',
            IsYoungerVisitor: 'No'
        },
        methods: {
            addVisitorToTable: function () {
                if (this.isYounger == 'yes') {
                    this.isYounger = true
                } else {
                    this.isYounger = false
                }

                this.visitors.push({ name: this.nameVisitor, lastName: this.lastNameVisitor, isYounger: this.IsYoungerVisitor }) // what to push unto the rows array
                this.nameVisitor = ''
                this.lastNameVisitor = ''
                this.IsYoungerVisitor = 'No'
                console.log(this.visitors)
            },
            removeVisitorToTable: function (index) {
                this.visitors.splice(index, 1)
            },
            setDataToServer: function () {
                
            }
        }
    })
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
