@model CostaDiamante_HOA.Models.Visits

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="app">
    <h2>{{ title }}</h2>


    <form v-on:submit.prevent="setDataToServer()">
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Visits</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control", v_model = "date" } })
                    @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.arrivalDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.arrivalDate, new { htmlAttributes = new { @class = "form-control", v_model = "arrivalDate" } })
                    @Html.ValidationMessageFor(model => model.arrivalDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.departureDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.departureDate, new { htmlAttributes = new { @class = "form-control", v_model = "departureDate" } })
                    @Html.ValidationMessageFor(model => model.departureDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.condoID, "condoID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("condoID", null, htmlAttributes: new { @class = "form-control", v_model = "condoID" })
                    @Html.ValidationMessageFor(model => model.condoID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ownerID, "ownerID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ownerID", null, htmlAttributes: new { @class = "form-control", v_model = "ownerID" })
                    @Html.ValidationMessageFor(model => model.ownerID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input v-click="setDataToServer" v-bind:disabled="Object.keys(object[0].Visits.visitors).length === 0" type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    </form>

    <div id="">
        <div class="form-group">
            <div class="col-md-4" style="padding-left: 0;">
                <label for="name">Name:</label>
                <input v-model="name" type="text" class="form-control" id="name">
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4">
                <label for="lastName">Last name:</label>
                <input v-model="lastName" type="text" class="form-control" id="lastName">
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-4" style="padding-right: 0">
                <label for="">Is smaller:</label>
                <select id="isYounger" v-model="isYounger" class="form-control valid">
                    <option value="Yes">Yes</option>
                    <option value="No">No</option>
                </select>
            </div>
        </div>

        <div class="col-md-offset-10 col-md-2" style="padding-right: 0;">
            <input type="submit" v-on:click="addVisitorToTable" v-bind:disabled="(name === '' && lastName === '')" value="Add" class="btn btn-default" style="float: right; margin-bottom: 10px;" />
        </div>
        <table class="table table-hover table-striped">
            <thead>
                <tr>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Is Smaller</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="(visitor, i) in object[0].Visits.visitors">
                    <td>{{ visitor.name }}</td>
                    <td>{{ visitor.lastName }}</td>
                    <td>{{ visitor.isYounger }}</td>
                    <td><label v-on:click="removeVisitorToTable(i)" class="removeLabel"><i class="glyphicon glyphicon-remove"></i> <span class="">Remove</span></label></td>
                </tr>
            </tbody>
        </table>

        <div class="col-md-10">
            @Html.ActionLink("Back to List", "Index")
        </div>

    </div>
</div>
@Scripts.Render("~/node_modules/vue/dist/vue.min.js")
@Scripts.Render("~/node_modules/axios/dist/axios.min.js")
<script>
    const v = new Vue({
        el: '#app',
        data: {
            title: 'Create',
            object: [{
                Visits: {
                    visitsID: 0,
                    date: '',
                    arrivalDate: '',
                    departureDate: '',
                    condoID: '',
                    ownerID: '',
                    visitors: []
                }
            }],
            date: '',
            arrivalDate: '',
            departureDate: '',
            condoID: '',
            ownerID: '',
            visitorID: 0,
            name: '',
            lastName: '',
            isYounger: 'No',
            errors: []
        },
        methods: {
            addVisitorToTable: function () {
                if (this.isYounger == 'yes') {
                    this.isYounger = true
                } else {
                    this.isYounger = false
                }
                this.object[0].Visits.visitors.push({ visitorID: 0, name: this.name, lastName: this.lastName, isYounger: this.isYounger })
                this.name = ''
                this.lastName = ''
                this.IsYounger = 'Yes'
                console.log(this.object[0].Visits.visitors)
            },
            removeVisitorToTable: function (index) {
                this.object[0].Visits.visitors.splice(index, 1)
            },
            setDataToServer: function () {


                this.object[0].Visits.visitsID = 0
                this.object[0].Visits.date = this.date
                this.object[0].Visits.arrivalDate = this.arrivalDate
                this.object[0].Visits.departureDate = this.departureDate
                this.object[0].Visits.condoID = this.condoID
                this.object[0].Visits.ownerID = this.ownerID
                this.object[0].__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val()
                console.log('*================================__RequestVerificationToken=====================================*')
                console.log(this.object[0].__RequestVerificationToken)

                //axios.defaults.headers.common['__RequestVerificationToken'] = $('input[name=__RequestVerificationToken]').val()
                console.log('*================================================================================================*')
                console.log(this.object[0].Visits)
                axios.post(`/Visits/create`, {
                    //body: this.object[0].Visits
                    body: this.date
                }).then(response => { }).catch(e => {
                    this.errors.push(e)
                    console.log(this.errors)
                })


            }
        }
    })
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}