@model List<CostaDiamante_HOA.Models.Condo>
@using CostaDiamante_HOA.Models
@using CostaDiamante_HOA.GeneralTools
@using Microsoft.AspNet.Identity

@{
    string confirmationModalID = "removeConfirmation";
    bool selectionMode = false;
    string ownerID = "";
    if (ViewData["selectionMode"] != null && ViewData["ownerID"] != null)
    {
        selectionMode = true;
        ownerID = (string)ViewData["ownerID"];

    }
    VMConfirmModalAttributes removeConfirmationModalOptions = new VMConfirmModalAttributes
    {
        modalID = confirmationModalID,
        modalTitle = "Confirm Remove Condo",
        primaryMessage = "You are going to remove the condo <strong id='condoName'></strong>"+
        " from owner's list, all visits notification related to this condo will be deleted.",
        javascriptFunction = "removeCondo",
        modalStyle = new VMConfirmModalAttributes.Style(VMConfirmModalAttributes.Style.StyleTypes.DANGER),
        callType = VMConfirmModalAttributes.CallType.JAVASCRIPT
    };
}
@if (selectionMode)
{
    <div>
        <button id="btnAssociate" class="btn btn-success"onclick="associateCondos()" disabled>Associate</button>
        <span class="alert alert-info"><strong>Find and select </strong>the condominiums
         you want to associate with this owner, Then press <strong>"Associate"</strong>
         to finish.</span>
    </div>
}
<table class="table table-hover table-striped @(selectionMode?"datatable":"")">
    <thead>
        <tr>
            @if (selectionMode)
            {
                <th width="2em">
                    Select condo
                </th>
            }
            @*<th>
                ID
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().name)
            </th>
            @if (!selectionMode) {
                <th></th>
            }
        </tr>
    </thead>
    <tbody>
        @if (Model.Count() > 0) { 
            foreach (var item in Model)
            {
                <tr>
                    @if (selectionMode)
                    {
                        <td>
                            <input type="checkbox" value="@item.condoID" condo-name="@item.name" onchange="selectChange(this)"/>
                        </td>
                    }
                    @*<td>
                        @Html.DisplayFor(modelItem => item.condoID)
                    </td>*@
                    <td>
                        @Html.DisplayFor(modelItem => item.name)
                    </td>
                    @if (!selectionMode)
                    {
                        <td>
                            @if(User.IsInRole(ApplicationUser.RoleNames.ADMIN) || User.IsInRole(ApplicationUser.RoleNames.LANDLORD)) { 
                            <a href="@Url.Action("Create", "Visits", new { id = item.condoID })">
                                <i class="fa fa-book"></i> Notify New Visit
                            </a> <span> | </span>
                            }
                            <a href="@Url.Action("HOAFees", "Condo", new { id = item.condoID })">
                                <i class="fa fa-money"></i> HOA Fees
                            </a>  <span> | </span>
                            <a href="@Url.Action("RentsByYear", "Reports", new { id = item.condoID })">
                                <i class="fa fa-list-alt"></i> Rents by Year
                            </a> 
                            @if(Request.IsAuthenticated && User.IsInRole(ApplicationUser.RoleNames.ADMIN))
                            {
                                <span> | </span>
                                <a data-toggle="modal" href='#@confirmationModalID'
                                   condo-name="@item.name" condo-id="@item.condoID"
                                   onclick="prepareConfirmationModal(this)">
                                    <i class="glyphicon glyphicon-remove"></i>Remove
                                </a>
                            }
                            
                        </td>
                    }
                </tr>
            }
        }
        else if(!selectionMode)
        {
            <tr>
                <td colspan="2">
                    <div class="alert alert-info">
                        No condominiums registered to this owner.
                    </div>
                </td>
            </tr>
        }
    </tbody>

</table>
@Html.AntiForgeryToken()

@Html.Partial("../Shared/Partial_ConfirmationModal", removeConfirmationModalOptions)

<script>
    function prepareConfirmationModal(link) {
        nameFunction = '@removeConfirmationModalOptions.javascriptFunction';
        condoName = $(link).attr("condo-name");
        condoID = $(link).attr("condo-id");
        $(".modal-footer #btnConfirm").attr("onclick", nameFunction + "(" + condoID + ")")
        $(".modal-body #condoName").html(condoName)
    }

    function removeCondo(condoID) {
        var antiForgeryToken = $("input[name=__RequestVerificationToken]").val();
        jQuery.postJSON("/Condo/RemoveFromOwner",{id:condoID},"JSON",
            function(res){
                location.reload();
            },
            function(request){
                alert(JSON.stringify(request))
            }, null, antiForgeryToken)
        }
</script>
@if (selectionMode) { 
    <script>
        var checkedList = new Array();
        var ownerID = '@ownerID';

        //Check the condo to be associated
        function selectChange(cb) {
            if ($(cb).is(":checked")) {
                checkedList.push({
                    condoID: $(cb).val(),
                    name: $(cb).attr("condo-name"),
                    ownerID : ownerID
                })
            }
            else {
                //If unchecked, item is removed from the selected list items
                var id = $(cb).val();
                checkedList = $.grep(checkedList, function (e) {
                    return e.condoID != id;
                });
            }

            $("#btnAssociate").prop('disabled', checkedList.length == 0);
            console.log(JSON.stringify(checkedList));
        }

        //Send all checked condos to server to be associated to current owner.
        function associateCondos() {
            var antiForgeryToken = $("input[name=__RequestVerificationToken]").val();
            jQuery.postJSON("/Condo/AssociateCondo",
                { 
                    condosToAssociate: checkedList,
                    ownerID: ownerID
                },"JSON",
                function (result) {
                    if (result > 0) {
                        location.reload();
                    }
                },
                function (request) {
                    alert("Error: " + JSON.stringify(request));
                }, null, antiForgeryToken)
        }
        
    </script>
}