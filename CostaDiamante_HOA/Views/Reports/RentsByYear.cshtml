@using CostaDiamante_HOA.Models
@model IEnumerable<VMVisitreport>
@{
    int year = ViewBag.year == null ? DateTime.Today.Year : ViewBag.year;
    Condo condo = ViewBag.condo == null ? new Condo() : ViewBag.condo;
    ViewBag.Title = "Report - Rents By Year " + condo.name + ", Owner: " + condo.owner.fullName;
    bool pdfMode = ViewBag.pdfMode == null ? false : ViewBag.pdfMode;

    Layout = pdfMode?"~/Views/Shared/_LayoutPDF.cshtml": "~/Views/Shared/_Layout.cshtml";
}

<div class="@(!pdfMode?"visible-print":"")">
    @Html.Partial("ReportHeader")
</div>

<nav class="hidden-print @(pdfMode?"hidden":"")">
    <a href="@Url.Action("Details","Owners",new { id = condo.ownerID })">
        <i class="glyphicon glyphicon-arrow-left"></i><span>Back to Owner Details</span>
    </a>
</nav>

@*Action buttons for report*@
<div class="row @(pdfMode?"hidden":"") hidden-print">
    <a class="btn btn-info pull-right" href="@Url.Action("DownloadPDfRentsByYear",new { id = condo.condoID, year=year })">
        <i class="fa fa-print"></i> <span>Download PDF</span>
    </a>
    @if (User.IsInRole(ApplicationUser.RoleNames.ADMIN)) {
    <a id="btnSendEmail" class="btn btn-info pull-right" href="#" onclick="sendEmailRentsByYear()" style="margin-right: 1em">
        <i class="fa fa-envelope"></i> <span>Send Email Report</span>
    </a>
    <img id="imgLoading" class="pull-right" style="height: 2.5em; display: none" src="/images/loading1.gif" />
    }
</div>
<br />


@*Show owner general information*@
@if (User.IsInRole(ApplicationUser.RoleNames.ADMIN))
{
    ViewDataDictionary vddOwner = new ViewDataDictionary();
    vddOwner.Add("showLinks", !pdfMode);
    @Html.Partial("../Owners/Partial_infoOwner", condo.owner, vddOwner)
}


@*Show Impact of Rent report by year*@
@{
    ViewDataDictionary vdd = new ViewDataDictionary();
    vdd.Add("year", year);
    vdd.Add("condo", condo);
    vdd.Add("pdfMode", pdfMode);
}
@Html.Partial("Partial_RentsByYear", Model, vdd)

<div class="@(!pdfMode?"visible-print":"")">
    @Html.Partial("ReportFooter")
</div>


@if (!pdfMode) { 
    @Html.AntiForgeryToken()
    @section Scripts{
        <script>
            //@Url.Action("SendEmailImpactRentsReport", new { id = condo.condoID, year = year })
            var condoID = @condo.condoID;
            var year = @year;
            var token = $('input[name=__RequestVerificationToken]').val()
            var api = axios.create({
                headers:{
                    "__RequestVerificationToken": token
                }
            })
            @*Ventana para confirmar envio de correo con reporte de rentas en el año a propietario y contactos relacionados*@
            function sendEmailRentsByYear() {
                swal("You are going to send Rents Report to the owner and related contacts by email. Are you sure?",{buttons:true})
                .then((confirm)=>{
                    hideBtnSendEmail(true)
                    api.post(`/Reports/SendEmailImpactRentsReport/`,{id:condoID, year: year})
                    .then(res=>{
                        hideBtnSendEmail(false)
                        res = res.data
                        if(res)
                            notifyError("An error ocurred while trying to send the emails. Details: "+res)
                        else
                            smallNotify("Report Sent!","success")
                    })
                    .catch(error=>{
                        console.log(error)
                    })
                })
            }

            function hideBtnSendEmail(hide){
                if(hide){
                    $("#btnSendEmail").hide()
                    $("#imgLoading").show()
                }else{
                    $("#imgLoading").hide()
                    $("#btnSendEmail").show()
                }
            }
        </script>    
    }
}