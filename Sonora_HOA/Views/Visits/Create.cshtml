@model Sonora_HOA.Models.Visits
@using Sonora_HOA.Models
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Condo condo = ViewBag.condo;
    CheckInList checkInList = ViewBag.checkInList;

    ViewDataDictionary vdd = new ViewDataDictionary();
    vdd.Add("selectionMode", true);
}

<a href="@Url.Action("Details","Owners",new { id=condo.owner.Id})">
    <i class="glyphicon glyphicon-arrow-left"></i>Back to Owner's details
</a>

@Html.Partial("../Owners/Partial_infoOwner", condo.owner)

<div class="panel panel-info">
    <div class="panel-heading">
        <h2 class="panel-title">Visit Notification Form</h2>
    </div>
    <div class="panel-body">
        <div class="form-inline">
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.date)
            @Html.HiddenFor(model => model.condoID)
            <div class="col-md-12">
                @Html.LabelFor(model => condo.name)
                <span>@condo.name</span>
            </div>
            <div class="row">
                <div class="form-group col-md-5">
                    @Html.LabelFor(model => model.arrivalDate)
                    @Html.EditorFor(model => model.arrivalDate, new { htmlAttributes = new { @class = "form-control", } })
                    @Html.ValidationMessageFor(model => model.arrivalDate, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-5">
                    @Html.LabelFor(model => model.departureDate)
                    @Html.EditorFor(model => model.departureDate, new { htmlAttributes = new { @class = "form-control", } })
                    @Html.ValidationMessageFor(model => model.departureDate, "", new { @class = "text-danger" })
                </div>
                <button id="btnRegister" name="createVisit" class="btn btn-success"
                        onclick="registerList()" disabled>
                    Notify Visit
                </button>
            </div>

            <div id="errorMessage" class="text-danger" hidden>
                Arrival date should be the same, or before departure date!
            </div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>
        @*Shows current year period checkin lists*@
        <div class="col-md-12">
            <h3>Current Check In List: @checkInList.period.ToString("MMMM/dd/yyyy")</h3>
            @Html.Partial("../Permissions/Partial_ShowCheckInList", checkInList, vdd)
        </div>
    </div>
</div>


@section Scripts {
    <script>
        function changeIcon(boton) {
            $(boton).toggleClass("fa-window-minimize fa-window-maximize")
        }

        //Date picker validation, and button block
        $("#arrivalDate, #departureDate").change(function () {
            var arrival = document.getElementById("arrivalDate").value;
            var departure = document.getElementById("departureDate").value;

            if (Date.parse(arrival) > Date.parse(departure) || arrival == "" || departure == "") {
                $('#createVisit').attr('disabled', true)
                $("#errorMessage").fadeIn(500)
            } else {
                $('#createVisit').attr('disabled', false)
                $("#errorMessage").fadeOut(500)
            }
        });

        //Send all checked condos to server to be associated to current owner.
        function registerList() {
            console.log(JSON.stringify(checkedList));
            var antiForgeryToken = $("input[name=__RequestVerificationToken]").val();
            var ownerID = '@condo.ownerID';
            var visit = {
                arrivalDate: $('#arrivalDate').val(),
                departureDate: $('#departureDate').val(),
                date: $('#date').val(),
                condoID: $('#condoID').val(),
                visitors: checkedList
            }
            jQuery.postJSON("/Visits/Create",
                { visit: visit },
                "JSON",
                function (result) {
                    if (result > 0) {
                        location.reload();
                    }
                },
                function (request) {
                    alert("Error: " + JSON.stringify(request));
                }, null, antiForgeryToken)
        }
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
