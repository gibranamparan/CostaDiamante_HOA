@model Sonora_HOA.Models.Visits
@using Sonora_HOA.Models
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<Permissions> permissions = ViewBag.Permissions;
    Permissions permission = new Permissions();
    //permission.startDate = DateTime.Today;
    Model.date = DateTime.Today;
    Model.arrivalDate = DateTime.Today;
    Model.departureDate = DateTime.Today;
    string ownerID = ViewBag.ownerID;
    if (permissions.Count() == 0) {
        permissions = new List<Permissions>();
    }
    Owner owner = ViewBag.owner;
}

@using (Html.BeginForm("Create","Visits", new { id = ownerID }))
{
    @Html.AntiForgeryToken()
    <div class="panel panel-info">
        <div class="panel-heading">
            <h2 class="panel-title">Create Visit</h2>
        </div>
        <div class="panel-body">
            <div class="form-horizontal">
                <hr />

                <div class="form-group">
                    @Html.LabelFor(model => model.arrivalDate, htmlAttributes: 
                   new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.arrivalDate,
                       new {
                           htmlAttributes = new {
                               @class = "form-control", type="Date",
                               id ="arrivalDate", name="arrivalDate" }
                       })
                        @Html.ValidationMessageFor(model => model.arrivalDate, "", 
                       new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.departureDate, htmlAttributes: 
                   new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.departureDate,
                       new { htmlAttributes =
                       new { @class = "form-control", type = "Date",
                           id = "departureDate", name = "departureDate" } })
                        @Html.ValidationMessageFor(model => model.departureDate, "", 
                       new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    
                    <div class="col-md-offset-2 col-md-10">
                        <div id="errorMessage" class="alert alert-info"
                             role="alert" hidden>Arrival date should be the same, or before departure date!</div>
                        <input id="createVisit" name="createVisit" type="submit" value="Create" data-toggle="tooltip" data-placement="top" title="Testing" onclick="ValidateDates('arrivalDate', 'departureDate');" class="btn btn-success" />
                    </div>
                </div>
            </div>
            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>    
}

<div class="panel panel-primary">
    <div class="panel-heading">
        <h2 class="panel-title">
            <span>
                New Permission
            </span>
            <i class="pull-right fa fa-window-minimize" onclick="changeIcon(this)"
               data-toggle="collapse" data-target="#Partial_CreatePermission"></i>
        </h2>
    </div>
    <div class="panel-body in" id="Partial_CreatePermission">
        @Html.Partial("../Permissions/Partial_CreatePermission", permission)
    </div>
</div>
@Html.Partial("../Permissions/Partial_PermissionList", permissions)

@section Scripts {
    <script>
        function changeIcon(boton) {
            $(boton).toggleClass("fa-window-minimize fa-window-maximize")
        }

        //Date picker validation, and button block
        $("#arrivalDate").change(function () {
            var arrival = document.getElementById("arrivalDate").value;
            var departure = document.getElementById("departureDate").value;

            if (arrival == "" || departure == "") {
                $('#createVisit').attr('disabled', true)
                $("#errorMessage").fadeIn(500, function () {

                })
            }
            else {
                //Validates ranges
                if ((Date.parse(arrival)) > (Date.parse(departure))) {

                    if ($('#createVisit').attr('disabled', true)) {
                        $("#errorMessage").fadeIn(500, function () {

                        })
                    }
                }
                else {
                    $('#createVisit').attr('disabled', false)
                    $("#errorMessage").fadeOut(500, function () {

                    })
                }
            }
        });
        $("#departureDate").change(function () {
            var arrival = document.getElementById("arrivalDate").value;
            var departure = document.getElementById("departureDate").value;
            if (departure == ""||arrival == "") {
                $('#createVisit').attr('disabled', true)
                $("#errorMessage").fadeIn(500, function () {

                })
            }
            else {
                if ((Date.parse(arrival)) > (Date.parse(departure))) {

                    if ($('#createVisit').attr('disabled', true)) {
                        $("#errorMessage").fadeIn(500, function () {

                        })
                    }
                }
                else {
                    $('#createVisit').attr('disabled', false)
                    $("#errorMessage").fadeOut(500, function () {

                    })
                }
            }
           
        });
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
