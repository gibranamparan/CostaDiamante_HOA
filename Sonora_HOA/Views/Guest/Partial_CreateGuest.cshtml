@model Sonora_HOA.Models.Guest
@{ 
    bool errorGuestName = false;
    if (ViewData["errorGuestName"] != null)
    {
        errorGuestName = (bool)ViewData["errorGuestName"];
    }
}

@using (Html.BeginForm("Create", "Guest", FormMethod.Post, new { @class = "form-inline" }))
{
    @Html.ValidationSummary("", new { @class = "text-danger" })
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model=>model.ownerID)
    <div class="form-group col-md-5">
        @Html.LabelFor(model => model.name)
        @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", onkeyup = "validateGuestName()" } })
        @Html.ValidationMessageFor(model => model.name)
    </div>
    <div class="form-group col-md-5">
    @Html.LabelFor(model => model.lastName)
            @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control", onkeyup = "validateGuestName()" } })
         @Html.ValidationMessageFor(model => model.lastName)
    </div>
    <button id="btnRegisterGuest" class="btn btn-success" disabled>Register</button>
}

<div id="guestErrorMsg" style='display:@(errorGuestName?"block":"none")' 
     class="field-validation-error col-md-12">Fill the form to save a new guest.</div>

<script>
    function validateGuestName() {
        var name = $("#name").val();
        var lastName = $("#lastName").val();
        var validName = lastName.trim() && name.trim();
        $("#btnRegisterGuest").attr("disabled", !validName)
    }
</script>