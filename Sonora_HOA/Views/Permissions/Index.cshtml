@model IEnumerable<Sonora_HOA.Models.Permissions>
@using Sonora_HOA.Models;
@using Sonora_HOA.GeneralTools;
@using Microsoft.AspNet.Identity;

@{
    ViewBag.Title = "Check In List Format";
    Layout = "~/Views/Shared/_Layout.cshtml";

    Permissions permission = new Permissions();
    Owner owner = ViewBag.owner;
    //Time periods for selection list
    List<CheckInList.TimePeriodPermissions> timePeriods = ViewBag.timePeriods;

    //Current and next checkinlist
    CheckInList currentCheckInList = ViewBag.currentCheckInList;
    CheckInList nextCheckInList = ViewBag.nextCheckInList;

    //Hide a CheckInList when it doesnt exist to show a form to register a new one
    bool hidePartialGuestListInCurrent = currentCheckInList.checkInListID > 0;
    bool hidePartialGuestListInNext =  nextCheckInList.checkInListID > 0;

    //Confirmation modal options
    VMConfirmModalAttributes confirmRegistrationModalOptions = new VMConfirmModalAttributes
    {
        modalID = "confirmationModal",
        modalTitle = "Confirm Check In List Registration",
        primaryMessage = "You are going to confirm a Check In List with the selected guest and family list. " +
        "If you confirm, you wont be able cancel it until the period of 6 months " +
        "<strong id='spanPeriod'>" + timePeriods.ElementAt(0) + "</strong> is finished.",
        javascriptFunction = "registerList",
        modalStyle = new VMConfirmModalAttributes.Style(VMConfirmModalAttributes.Style.StyleTypes.INFO),
        callType = VMConfirmModalAttributes.CallType.JAVASCRIPT
    };

    //
    ViewDataDictionary vddCurrent = new ViewDataDictionary();
    vddCurrent.Add("selectionMode", !hidePartialGuestListInCurrent);
    vddCurrent.Add("ownerID", owner.Id);
    vddCurrent.Add("listID", "current");
    vddCurrent.Add("jsRegisterListFunction", 
        confirmRegistrationModalOptions.javascriptFunction);

    ViewDataDictionary vddNext = new ViewDataDictionary();
    vddNext.Add("selectionMode", !hidePartialGuestListInNext);
    vddNext.Add("ownerID", owner.Id);
    vddNext.Add("listID", "next");
    vddNext.Add("jsRegisterListFunction", 
        confirmRegistrationModalOptions.javascriptFunction);
}
<a href="@Url.Action("Details","Owners",new { id = owner.Id})">
    <i class="glyphicon glyphicon-arrow-left"></i>Back to Owner's Details
</a>
<h2>Owner Family and Guest Check in List</h2>

@*Owner details panel*@
@if(User.IsInRole(ApplicationUser.RoleNames.ADMIN))
{
    @Html.Partial("../Owners/Partial_infoOwner", owner)
}


@if (User.IsInRole(ApplicationUser.RoleNames.OWNER))
{
    <div class="alert alert-info">
        In this list you register <strong>non-paying</strong> family and guests that will stay in your unit while
        you are not in attendance. Owners may have any guests with them while owner is also staying in their condo.
    </div>
}
@*Panel to create a new CheckInList creating guests from a form*@
<div class="panel panel-info">
    @*Collapsable panel*@
    <div class="panel-heading">
        <span class="panel-title">New Check in List</span>
    </div>
    <div class='panel-body' id='pnlNewCheckInList'>
        <div class="form-inline">
            <div class="row">
                @*Dropdown to show the current and next 6 months periods*@
                <div class="form-group col-md-10">
                    @Html.LabelFor(model => currentCheckInList.period)
                    <select id="period" name="period" onchange="periodChanged(this)">
                        <option value="current" start-date="@timePeriods[0].StartDate.ToString("yyyy-MM-dd")"
                                end-date="@timePeriods[0].EndDate.ToString("yyyy-MM-dd")">
                            @timePeriods[0]
                        </option>

                        <option value="next" start-date="@timePeriods[1].StartDate.ToString("yyyy-MM-dd")"
                                end-date="@timePeriods[1].EndDate.ToString("yyyy-MM-dd")">
                            @timePeriods[1]
                        </option>
                    </select>
                </div>

                @*Open modal to confirm checkin list registration*@
                <button type="button" class="btn btn-success" id="btnRegister"
                        data-toggle="modal" href='#@confirmRegistrationModalOptions.modalID' disabled 
                        style="display:@(hidePartialGuestListInCurrent?"none":"inline-block")">
                    Register
                </button>

                @*Show error details when checkinlist registration fails*@
                <div class="field-validation-error" style="display:none" id="pnlErrorMsg">
                    An unexpected error happend when, refresh page and try again.
                    If problem persists, contact administrator.
                    <i class="fa fa-question-circle" style="cursor: pointer" 
                       onclick="$(this).next().slideToggle()"></i>
                    <div class="alert alert-danger" style="display:none">
                        <strong>Error Details: </strong>
                        <span></span>
                    </div>
                </div>
            </div>
        </div>

        @*Panel to show current checkin lists*@
        <div id="pnlCurrentCheckInList" class="panel-body" style="display:block">
            <h3>Current Check In List</h3>
            @*Shows the guest list for selection, shown when checkinList is found for selected year period*@
            <div id="Partial_ListGuest" style="display:@(hidePartialGuestListInCurrent?"none":"block")">
                @Html.Partial("../Guest/Partial_ListPermissions", currentCheckInList.permissions, vddCurrent)
            </div>
            @*Else, Blocks selection and shows message*@
            <div id="checkInRegisteredMessage" style="display:@(!hidePartialGuestListInCurrent?"none":"block")">
                @{ vddCurrent.Add("showWildCards", true);}
                @Html.Partial("Partial_ShowCheckInList", currentCheckInList, vddCurrent)
            </div>
        </div>
    
        @*Panel to show next year period checkin lists*@
        <div id="pnlNextCheckInList" class="panel-body" style="display:none">
            <h3>Next Period Check In List</h3>
            @*Shows the guest list for selection, shown when checkinList is found for selected year period*@
            <div id="Partial_ListGuest" style="display:@(hidePartialGuestListInNext?"none":"block")">
                @Html.Partial("../Guest/Partial_ListPermissions", nextCheckInList.permissions, vddNext)
            </div>
            @*Else, Blocks selection and shows message*@
            <div id="checkInRegisteredMessage" style="display:@(!hidePartialGuestListInNext?"none":"block")">
                @{ vddNext.Add("showWildCards", true);}
                @Html.Partial("Partial_ShowCheckInList", nextCheckInList, vddNext)
            </div>
        </div>
    </div>
</div>

@Html.Partial("../Shared/Partial_ConfirmationModal", confirmRegistrationModalOptions)

@section Scripts{
    <script>
        var currentCheckInListID = @currentCheckInList.checkInListID;
        var nextCheckInListID = @nextCheckInList.checkInListID;
        function periodChanged(ddl) {
            //Get data from selected period in dropdown
            var yearPeriod = $(ddl).val();
            var periodName = $(ddl).children(':selected').html();
            var showCurrent = yearPeriod == "current";

            $('#spanPeriod').html(periodName);
            //Current and Next chenck in list panels are hide or shown
            if(showCurrent)
                hidePartialGuest = currentCheckInListID>0;
            else
                hidePartialGuest = nextCheckInListID>0;

            $("#pnlCurrentCheckInList").slideDownOrUp(showCurrent);
            $("#pnlNextCheckInList").slideDownOrUp(!showCurrent);

            //Guest selection or blocking message are hide or shown
            $("#btnRegister").fadeInOrOut(!hidePartialGuest);
            $("#Partial_ListGuest").fadeInOrOut(!hidePartialGuest)
            $("#checkInRegisteredMessage").fadeInOrOut(hidePartialGuest)

            var validList = validateSelectedList();
            $("#btnRegister").prop('disabled',!validList);
        }

        function getSelectedCheckedList() {
            //The checkedList in this scope takes the value of the selected period list
            var selPeriodName = $("#period").val();
            if (selPeriodName == "current")
                return { visitors:checkedListcurrent, checkInListID : @currentCheckInList.checkInListID };
            else if (selPeriodName == "next")
                return { visitors:checkedListnext, checkInListID : @nextCheckInList.checkInListID };
        }

        //Send all checked condos to server to be associated to current owner.
        function registerList() {
            var antiForgeryToken = $("input[name=__RequestVerificationToken]").val();
            var selectedPeriod = $("#period").find(":selected");
            var val = $("#period").val();
            var period = {
                startDate: selectedPeriod.attr("start-date"),
                endDate: selectedPeriod.attr("end-date")
            }

            var selectedCheckedList = getSelectedCheckedList();
            var checkedList = selectedCheckedList.visitors;
            if(selectedCheckedList.checkInListID)
                period.checkInListID = selectedCheckedList.checkInListID

            jQuery.postJSON("/Permissions/Create",
                {
                    checkedList: checkedList,
                    period: period,
                    ownerID: '@owner.Id'
                },"JSON",
                function (result) {
                    if (result.numReg > 0) {
                        location.reload();
                    }else{
                        var errorMsg = result.error;
                        $("#@(confirmRegistrationModalOptions.modalID)").modal('toggle');
                        $("#pnlErrorMsg").slideDown();
                        $("#pnlErrorMsg span")
                            .html("No data was saved. "+errorMsg)
                    }
                },
                function (request) {
                    $("#pnlErrorMsg").slideDown();
                    $("#pnlErrorMsg span")
                        .html(JSON.stringify(request))
                }, null, antiForgeryToken)
        }

        function validateSelectedList(){
            var selectedList = getSelectedCheckedList();
            var guests = selectedList.visitors;
            return guests.length>0;
        }

        function getSelectedCheckedList() {
            //The checkedList in this scope takes the value of the selected period list
            var selPeriodName = $("#period").val();
            if (selPeriodName == "current"){
                var checkInListID = Number('@currentCheckInList.checkInListID');
                var status = '@currentCheckInList.status';
                if(checkInListID==0)
                    return { visitors:checkedListcurrent, checkInListID : checkInListID };
                else
                    return { visitors:checkedListcurrent@("WildCards"), checkInListID : @currentCheckInList.checkInListID };
            }
            else if (selPeriodName == "next"){
                var checkInListID = @nextCheckInList.checkInListID;
                var status = '@nextCheckInList.status';
                if(checkInListID==0)
                    return { visitors:checkedListnext, checkInListID : checkInListID };
                else
                    return { visitors:checkedListnext@("WildCards"), checkInListID : @nextCheckInList.checkInListID };
            }
        }
    </script>    
}

